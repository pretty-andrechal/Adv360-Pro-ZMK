#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm_l: hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 70 69>;
            hold-trigger-on-release;
        };

        hm_r: hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64 66 65>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <16 30>;
            require-prior-idle-ms = <150>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 24>;
            require-prior-idle-ms = <150>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <17 31>;
            require-prior-idle-ms = <150>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <32 18>;
            require-prior-idle-ms = <150>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
            require-prior-idle-ms = <150>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Dvorak {
            bindings = <
&kp ESC    &kp N1         &kp N2        &kp N3        &kp N4              &kp N5  &to 0                                                     &to 4      &kp N6  &kp N7         &kp N8        &kp N9        &kp N0         &kp BSLH
&kp TAB    &kp APOS       &kp COMMA     &kp DOT       &kp P               &kp Y   &to 1                                                     &to 5      &kp F   &kp G          &kp C         &kp R         &kp L          &kp FSLH
&kp CAPS   &hm_l LCTRL A  &hm_l LALT O  &hm_l LGUI E  &hm_l LEFT_SHIFT U  &kp I   &to 2      &kp LCTRL  &trans        &trans     &kp RCTRL  &to 6      &kp D   &hm_r RSHFT H  &hm_r RGUI T  &hm_r RALT N  &hm_r RCTRL S  &kp MINUS
&kp LSHFT  &kp SEMI       &kp Q         &kp J         &kp K               &kp X                         &kp HOME      &kp PG_UP                        &kp B   &kp M          &kp W         &kp V         &kp Z          &kp RSHFT
&trans     &kp GRAVE      &kp BSPC      &kp LEFT      &kp RIGHT                   &kp LSHFT  &trans     &kp END       &kp PG_DN  &kp RET    &kp SPACE          &kp UP         &kp DOWN      &trans        &trans         &trans
            >;
        };

        enthium {
            bindings = <
&kp TILDE  &kp N1                &kp N2            &kp N3            &kp N4              &kp N5         &to 0                                          &to 4      &kp N6  &kp N7               &kp N8                &kp N9             &kp N0                 &trans
&kp TAB    &kp B                 &kp Y             &kp O             &kp U               &kp SLASH      &to 1                                          &to 5      &kp X   &kp L                &kp D                 &kp W              &kp V                  &trans
&kp Q      &hm_l LEFT_CONTROL C  &hm_l LEFT_ALT I  &hm_l LEFT_GUI E  &hm_l LEFT_SHIFT A  &kp COMMA      &to 2   &trans  &trans      &trans  &trans     &to 6      &kp K   &hm_r RIGHT_SHIFT H  &hm_r RIGHT_GUI T     &hm_r RIGHT_ALT S  &hm_r RIGHT_CONTROL N  &kp Z
&kp LSHFT  &kp SQT               &kp MINUS         &kp EQUAL         &kp PERIOD          &kp SEMICOLON                  &trans      &trans                        &kp J   &kp M                &kp G                 &kp P              &kp F                  &kp RSHFT
&trans     &trans                &trans            &trans            &trans                             &trans  &trans  &trans      &trans  &kp ENTER  &kp SPACE          &kp R                &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET   &kp RIGHT_BRACKET      &kp RIGHT_PARENTHESIS
            >;
        };

        Qwerty {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &to 0                                                    &mo 6      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &to 1                                                    &none      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &to 2     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 6      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 6
            >;
        };

        Engrammer {
            bindings = <
&kp EQUAL   &kp N1                &kp N2            &kp N3            &kp N4              &kp N5     &to 0                                          &trans     &kp N6    &kp N7               &kp N8             &kp N9             &kp N0                 &kp BSLH
&kp GRAVE   &kp B                 &kp Y             &kp O             &kp U               &kp APOS   &to 4                                          &trans     &kp SEMI  &kp L                &kp D              &kp W              &kp V                  &kp Z
&caps_word  &hm_l LEFT_CONTROL C  &hm_l LEFT_ALT I  &hm_l LEFT_GUI E  &hm_l LEFT_SHIFT A  &kp COMMA  &to 2   &trans  &trans      &trans  &trans     &trans     &kp DOT   &hm_r RIGHT_SHIFT H  &hm_r RIGHT_GUI T  &hm_r RIGHT_ALT S  &hm_r RIGHT_CONTROL N  &kp Q
&kp LSHFT   &kp G                 &kp X             &kp J             &kp K               &kp MINUS                  &trans      &trans                        &kp FSLH  &kp R                &kp M              &kp F              &kp P                  &kp RSHFT
&trans      &trans                &trans            &trans            &trans                         &trans  &trans  &trans      &trans  &kp ENTER  &kp SPACE            &kp LPAR             &kp LBKT           &kp RBKT           &kp RIGHT_PARENTHESIS  &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 6      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 6      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 6
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 5                                      &mo 6   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
